//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MP3_MetadataEditor_Client.MP3MetadataEditorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://schemas.datacontract.org/2004/07/MP3_MetadataEditor_RestServiceLibrary.Ser" +
        "vice_Layer.Base_Communication_Objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MP3_MetadataEditor_Client.MP3MetadataEditorService.Mp3MetadataEditorServiceRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mp3MetadataEditorServiceRequest", Namespace="http://schemas.datacontract.org/2004/07/MP3_MetadataEditor_RestServiceLibrary.Ser" +
        "vice_Layer.MP3MetadataEditor_Service.Client_Communication_Objects.RequestObjects" +
        "")]
    [System.SerializableAttribute()]
    public partial class Mp3MetadataEditorServiceRequest : MP3_MetadataEditor_Client.MP3MetadataEditorService.RequestBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MP3_MetadataEditor_Client.MP3MetadataEditorService.Body BodyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MP3_MetadataEditor_Client.MP3MetadataEditorService.Body Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Body", Namespace="http://schemas.datacontract.org/2004/07/MP3_MetadataEditor_RestServiceLibrary.Ser" +
        "vice_Layer.MP3MetadataEditor_Service.Client_Communication_Objects.RequestObjects" +
        "")]
    [System.SerializableAttribute()]
    public partial class Body : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumArtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComposerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LyricsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SongTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<uint> TrackNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<uint> YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumArt {
            get {
                return this.AlbumArtField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumArtField, value) != true)) {
                    this.AlbumArtField = value;
                    this.RaisePropertyChanged("AlbumArt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Composer {
            get {
                return this.ComposerField;
            }
            set {
                if ((object.ReferenceEquals(this.ComposerField, value) != true)) {
                    this.ComposerField = value;
                    this.RaisePropertyChanged("Composer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lyrics {
            get {
                return this.LyricsField;
            }
            set {
                if ((object.ReferenceEquals(this.LyricsField, value) != true)) {
                    this.LyricsField = value;
                    this.RaisePropertyChanged("Lyrics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SongTitle {
            get {
                return this.SongTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SongTitleField, value) != true)) {
                    this.SongTitleField = value;
                    this.RaisePropertyChanged("SongTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<uint> TrackNumber {
            get {
                return this.TrackNumberField;
            }
            set {
                if ((this.TrackNumberField.Equals(value) != true)) {
                    this.TrackNumberField = value;
                    this.RaisePropertyChanged("TrackNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<uint> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://schemas.datacontract.org/2004/07/MP3_MetadataEditor_RestServiceLibrary.Ser" +
        "vice_Layer.Base_Communication_Objects")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MP3_MetadataEditor_Client.MP3MetadataEditorService.Mp3MetadataEditorServiceResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mp3MetadataEditorServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/MP3_MetadataEditor_RestServiceLibrary.Ser" +
        "vice_Layer.MP3MetadataEditor_Service.Client_Communication_Objects.ResponseObject" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Mp3MetadataEditorServiceResponse : MP3_MetadataEditor_Client.MP3MetadataEditorService.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Net.HttpStatusCode StatusCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Net.HttpStatusCode StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MP3MetadataEditorService.IMp3MetadataEditorService")]
    public interface IMp3MetadataEditorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMp3MetadataEditorService/AddMP3", ReplyAction="http://tempuri.org/IMp3MetadataEditorService/AddMP3Response")]
        MP3_MetadataEditor_Client.MP3MetadataEditorService.Mp3MetadataEditorServiceResponse AddMP3(MP3_MetadataEditor_Client.MP3MetadataEditorService.Mp3MetadataEditorServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMp3MetadataEditorService/GetAlbumArt", ReplyAction="http://tempuri.org/IMp3MetadataEditorService/GetAlbumArtResponse")]
        string GetAlbumArt(string artist, string song);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMp3MetadataEditorServiceChannel : MP3_MetadataEditor_Client.MP3MetadataEditorService.IMp3MetadataEditorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Mp3MetadataEditorServiceClient : System.ServiceModel.ClientBase<MP3_MetadataEditor_Client.MP3MetadataEditorService.IMp3MetadataEditorService>, MP3_MetadataEditor_Client.MP3MetadataEditorService.IMp3MetadataEditorService {
        
        public Mp3MetadataEditorServiceClient() {
        }
        
        public Mp3MetadataEditorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Mp3MetadataEditorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Mp3MetadataEditorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Mp3MetadataEditorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MP3_MetadataEditor_Client.MP3MetadataEditorService.Mp3MetadataEditorServiceResponse AddMP3(MP3_MetadataEditor_Client.MP3MetadataEditorService.Mp3MetadataEditorServiceRequest request) {
            return base.Channel.AddMP3(request);
        }
        
        public string GetAlbumArt(string artist, string song) {
            return base.Channel.GetAlbumArt(artist, song);
        }
    }
}
